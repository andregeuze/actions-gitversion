name: CI

on:
  # Pushes will trigger a package build for pre-release
  # Pull requests will trigger a package build for production
  push:
    branches:
      - feature/*
      - hotfix/*
  pull_request:
    branches:
      - main

env:
  IS_PRERELEASE: ${{ github.event_name == 'push' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --unshallow

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.4
        with:
          versionSpec: "5.2.x"

      - name: Get version number
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.4
        with:
          useConfigFile: "true"
          configFilePath: "${{ github.workspace }}/gitversion.yml"

      - name: Set environment variables based on target branch
        run: |
          echo ::set-env name=COMMIT_MESSAGE::$(git log -1 HEAD --pretty=format:%s)

      - name: Archive Output
        uses: thedoctor0/zip-release@master
        with:
          filename: release.zip
          directory: src

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.gitversion.outputs.SemVer }}
          release_name: v${{ steps.gitversion.outputs.SemVer }}
          draft: true
          prerelease: ${{ env.IS_PRERELEASE }}
          body: |
            Version: v${{ steps.gitversion.outputs.SemVer }}
            Branch name: ${{ steps.gitversion.outputs.EscapedBranchName }}

            InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}
            FullBuildMetaData: ${{ steps.gitversion.outputs.FullBuildMetaData }}

            Changes:
            - ${{ env.COMMIT_MESSAGE }}

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/release.zip
          asset_name: release.zip
          asset_content_type: application/zip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
